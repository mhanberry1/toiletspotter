name: Deploy Supabase API

on:
  push:
    branches: [ main ]
    paths:
      - 'services/supabase-schema.sql'
      - 'supabase/functions/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Login to Supabase
        run: |
          echo "${{ secrets.SUPABASE_ACCESS_TOKEN }}" | supabase login

      - name: Deploy database schema
        env:
          SUPABASE_PROJECT_ID: yygzsbedvtepmaniffxo
        run: |
          # Try direct SQL execution via the REST API
          if [ -f "services/supabase-schema.sql" ]; then
            echo "Deploying database schema..."
            # Create a temporary config file for the project reference
            cat > supabase/config-deploy.toml << EOF
            project_id = "$SUPABASE_PROJECT_ID"
            EOF
            
            # Use the db push command with the correct syntax
            supabase db push --db-url "postgresql://postgres:${{ secrets.SUPABASE_DB_PASSWORD }}@db.$SUPABASE_PROJECT_ID.supabase.co:5432/postgres" ./services/supabase-schema.sql
          fi

      - name: Deploy Edge Functions
        env:
          SUPABASE_PROJECT_ID: yygzsbedvtepmaniffxo
        run: |
          # Check if functions directory exists
          if [ -d "supabase/functions" ]; then
            echo "Deploying Supabase Edge Functions..."
            # Create a temporary config file for the project reference
            cat > supabase/config-deploy.toml << EOF
            project_id = "$SUPABASE_PROJECT_ID"
            EOF
            
            # Deploy all functions in the directory
            cd supabase/functions
            for func_dir in */; do
              if [ -d "$func_dir" ]; then
                func_name=$(basename "$func_dir")
                echo "Deploying function: $func_name"
                supabase functions deploy "$func_name"
              fi
            done
          else
            echo "No functions directory found, skipping function deployment"
          fi

      - name: Verify deployment
        env:
          SUPABASE_PROJECT_ID: yygzsbedvtepmaniffxo
        run: |
          echo "Verifying database deployment..."
          PGPASSWORD=${{ secrets.SUPABASE_DB_PASSWORD }} psql -h db.$SUPABASE_PROJECT_ID.supabase.co -U postgres -d postgres -c "\dt public.*"
